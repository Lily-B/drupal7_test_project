<?php

/**
 * Implement hook_menu().
 */
function new_batch_menu() {
  $items = array();

  $items['change_name_form'] = array(
    'title' => 'Change name form',
    'description' => 'Form for changing pets owners names',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('new_batch_change_name_form'),
    'access arguments' => array('access form content'),
    'file' => '/includes/new_batch.forms.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function new_batch_permission() {
  return array(
    'access form content' => array(
      'title' => t('Access content for the New Batch module'),
    )
  );
}

/*
* Implements hook_cron().
*/
function new_batch_cron() {
  $nodes = node_load_multiple([], ['status' => 1, 'type' => 'article']);
  $nodes_total = count($nodes);
  $queue = DrupalQueue::get('unpublish_old');
  foreach ($nodes as $node_to_change) {
    $queue->createItem($node_to_change);
  }
}

/*
* Implements hook_cron_queue_info().
*/
function new_batch_cron_queue_info() {
  $queues['unpublish_old'] = array(
    'worker callback' => 'unpublish',
    'time' => 120,
  );
  return $queues;
}

/**
 * Compares changed date of node with $unpublish_date and unpublish node if
 * it was last updated earlier
 * @param $data
 */
function unpublish($data) {

//  $unpublish_date = strtotime("- 2 days");
  $unpublish_date = strtotime("- 1800 seconds");
  // load the node object
  $node = node_load($data->nid);
  $last_update = $data->changed;
  if ($last_update < $unpublish_date) {
    $node->status = 0;
    //resave node
    node_save($node);
  }
}



