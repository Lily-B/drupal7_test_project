<?php

module_load_include('inc', 'ds_form', 'includes/custom_fapi_validation_rules');
/**
 * Implement hook_menu().
 */
function ds_form_menu() {
  $items = array();

  $items['subscription_form'] = array(
    'title' => 'Styled subscription form',
    'description' => 'A styled news subscription form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ds_form_subscription_form'),
    'access arguments' => array('access form content'),
  );

//  $items['friend_subscription/%'] = array(
//    'page callback' => 'ds_form_subscribe_friend_info',
//    'page arguments' => array(true),
//    'delivery callback' => 'ajax_deliver',
//    'access callback' => TRUE,
//  );

  return $items;
}

/**
 * Custom subscription form.
 */
function ds_form_subscription_form($form, &$form_state) {

  $form['#attached']['js'][] = drupal_get_path('module', 'ds_form')
    . '/js/custom_state.js';


  $form['first_name'] = array(
    '#title' => t('First Name'),
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => t('First Name '),
    ),
    '#size' => 20,
    '#maxlength' => 20,
    '#rules' => array(
      'alpha_space',
      array(
        'rule' => 'length[1,20]',
        'error' => t('Please, enter a shorter than 20 char name.')
      )
    ),
    '#states' => array(
      'custom_state' => array(
        ':input[name="last_name"]' => array(
          'filled' => TRUE
        ),
      ),
      'required' => array(
        ':input[name="last_name"]' => array(
          'filled' => TRUE
        ),
      ),
    ),
  );

  $form['last_name'] = array(
    '#prefix' => '<div id="lName">',
    '#suffix' => '</div>',
    '#title' => t('Last Name'),
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => t('Last Name '),
    ),
    '#states' => array(
      'custom_state' => array(
        ':input[name="first_name"]' => array(
          'filled' => TRUE
        ),
      ),
      'required' => array(
        ':input[name="first_name"]' => array(
          'filled' => TRUE
        ),
      ),
    ),
    '#size' => 20,
    '#maxlength' => 20,
    '#rules' => array(
      'alpha_space',
      array(
        'rule' => 'length[1,20]',
        'error' => t('Please, enter a shorter than 20 char name.')
      )
    ),
  );

  $form['gender'] = array(
    '#type' => 'radios',
    '#title' => t('Gender'),
    '#options' => array(
      'female' => t('Female'),
      'male' => t('Male'),
    ),
  );

  $form['male_age'] = array(
    '#title' => t('Male Age'),
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => t('Age'),
    ),
    '#size' => 3,
    '#rules' => array(
      'numeric',
      array(
        'rule' => 'length[1,3]',
        'error' => t('Please, enter a real age.')
      )
    ),
    '#states' => array(
      'visible' => array(
        ':input[name="gender"]' => array(
          'value' => 'male'
        ),
      ),
    ),
  );

  $form['email'] = array(
    '#title' => t('Email'),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder' => t('Email Address *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'email',
        'error' => t('Please, enter a valid email.')
      ),
      array(
        'rule' => 'length[3,30]',
        'error' => t('Please, enter a shorter than 30 char email.')
      )
    ),
  );

  $form['country'] = array(
    '#title' => t('Country'),
    '#type' => 'select',
    '#options' => country_get_list(),
    '#default_value' => 'UG',
    '#ajax' => array(
      'callback' => 'ds_form_region_callback',
      'wrapper' => 'region',
      'method' => 'replace',
      'effect' => 'fade',
    ),
  );

  $form['region'] = array(
    '#prefix' => '<div id="region">',
    '#suffix' => '</div>',
    '#type' => 'markup',
  );

  $form['subscribe_friend'] = array(
    '#type' => 'checkbox',
    '#title' => t('I want to subscribe my friend.'),
    '#default_value' => FALSE,
    '#ajax' => array(
      'callback' => 'ds_form_subscribe_friend_info',
    ),
    '#suffix' => '<div id="subscribe_friend_wrapper"></div>',
  );
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit!'),
  );
  return $form;
}

/**
 * Adds ajax for friend's mail field
 * @param $form
 * @param $form_state
 * @return array
 */
function ds_form_subscribe_friend_info($form, &$form_state){
  if ($form_state['values']['subscribe_friend']){
    $form['friend_email'] = array(
      '#prefix' => '<div id="ds_form_friend_email">',
      '#suffix' => '</div>',
      '#title' => t("My friend's Email"),
      '#type' => 'textfield',
      '#required' => TRUE,
      '#attributes' => array(
        'placeholder' => t("My friend's Email Address *"),
      ),
      '#rules' => array(
        array(
          'rule' => 'friend_email',
          'error' => t('Please, enter a valid email.')
        ),
        array(
          'rule' => 'length[3,30]',
          'error' => t('Please, enter a shorter than 30 char email.')
        )
      ),
    );
    $output = render($form['friend_email']);
  }else{
    $output = '';
  }
  $commands = array();
  $commands[] = ajax_command_alert('Please, make sure your friend wants it.');
  $commands[] = ajax_command_html('#subscribe_friend_wrapper', $output);
  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Callback to change #region <div>
 * @param $form
 * @param $form_state
 * @return array
 */
function ds_form_region_callback($form, $form_state) {
  if ($form_state['values']['country'] == 'UA') {
    $form['region'] = array(
      '#prefix' => '<div id="region">',
      '#suffix' => '</div>',
      '#title' => t('Oblast'),
      '#type' => 'select',
      '#options' => array(
        'kh' => t('Kharkivska'),
        'ki' => t('Kievska'),
        'lg' => t("Luganska"),
      ),
    );
  }
  elseif ($form_state['values']['country'] == 'US') {
    $form['region'] = array(
      '#prefix' => '<div id="region">',
      '#suffix' => '</div>',
      '#title' => t('State'),
      '#type' => 'select',
      '#options' => array(
        'tx' => t('Texas'),
        'nv' => t('Nevada'),
        'cl' => t('California'),
      ),
    );
  }
  return $form['region'];
}

/**
 * Implement hook_form_submit().
 * @param $form
 * @param $form_state
 */
function ds_form_subscription_form_submit($form, &$form_state) {
//  $new_email = $form_state['values']['email'];
//  $new_fname = $form_state['values']['first_name'];
//  $new_lname = $form_state['values']['last_name'];
//  db_insert('ds_form_news_subscriptions')
//    ->fields(array(
//      'first_name' => $new_fname,
//      'last_name' => $new_lname,
//      'email' => $new_email,
//    ))
//    ->execute();
  drupal_set_message(t('Success!'));
}

/**
 * Implement hook_form_validate().
 * @param $form
 * @param $form_state
 * @return bool
 */
function ds_form_subscription_form_validate($form, &$form_state) {
//  $new_email = $form_state['values']['email'];
//  if (!(db_table_exists('ds_form_news_subscriptions'))) {
//    //create table or show message
//    drupal_set_message(t('DB error occurred.'), 'error');
//
//  }
//  else {
//    $row_exists = db_select('ds_form_news_subscriptions', 'u')
//      ->fields('u', array('first_name'))
//      ->condition('u.email', $new_email)
//      ->execute()
//      ->fetchField();
//    if ($row_exists) {
//      form_set_error('email', t('User with this e-mail has already subscribed.'));
//    }
//    return TRUE;
//  }
  if ($form_state['values']['first_name'] && !$form_state['values']['last_name']) {
    form_set_error('last_name', t('If you enter your first name, please enter last name too.'));
    return FALSE;
  }
  if ($form_state['values']['last_name'] && !$form_state['values']['first_name']) {
    form_set_error('first_name', t('If you enter your last name, please enter first name too.'));
    return FALSE;
  }
  return TRUE;
}

/**
 * Implements hook_permission().
 */
function ds_form_permission() {
  return array(
    'access form content' => array(
      'title' => t('Access content for the Form module'),
    )
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function ds_form_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return 'plugins/' . $plugin;
  }
}
