<?php

module_load_include('inc', 'ds_form', 'includes/custom_fapi_validation_rules');
/**
 * Implement hook_menu().
 */
function ds_form_menu() {
  $items = array();

  $items['subscription_form'] = array(
    'title' => 'Styled subscription form',
    'description' => 'A styled news subscription form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ds_form_subscription_form'),
    'access arguments' => array('access form content'),
  );
  return $items;
}

/**
 * Custom sub.
 */
function ds_form_subscription_form($form, &$form_state) {

  $form['first_name'] = array(
    '#title' => t('First Name'),
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder'=> t('First Name *'),
    ),
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => TRUE,
    '#rules' => array(
      'alpha_space',
      array(
        'rule' => 'length[1,20]',
        'error' => t('Please, enter a shorter than 20 char name.')
      )
    ),
  );
  $form['last_name'] = array(
    '#title' => t('Last Name'),
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder'=> t('Last Name *'),
    ),
    '#size' => 20,
    '#maxlength' => 20,
    '#required' => TRUE,
    '#rules' => array(
      'alpha_space',
      array(
        'rule' => 'length[1,20]',
        'error' => t('Please, enter a shorter than 20 char name.')
      )
    ),
  );

  $form['email'] = array(
    '#title' => t('Email'),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder'=> t('Email Address *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'email',
        'error' => t('Please, enter a valid email.')
      ),
      array(
        'rule' => 'length[3,30]',
        'error' => t('Please, enter a shorter than 30 char email.')
      )
    ),
  );

  $form['email_repeat'] = array(
    '#title' => t('Email repeat'),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder'=> t('Repeat Email Address *'),
    ),
    '#rules' => array(
      array(
        'rule' => 'match_field[email]',
        'error' => t('Please, repeat the same email')
      )
    ),
  );

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit!'),
  );

  return $form;
}

/**
 * Implement hook_form_submit().
 * @param $form
 * @param $form_state
 */
function ds_form_subscription_form_submit($form, &$form_state) {
  $new_email = $form_state['values']['email'];
  $new_fname = $form_state['values']['first_name'];
  $new_lname = $form_state['values']['last_name'];
  db_insert('ds_form_news_subscriptions')
    ->fields(array(
      'first_name' => $new_fname,
      'last_name' => $new_lname,
      'email' => $new_email,
    ))
    ->execute();
  drupal_set_message(t('Success!'));
}

/**
 * Implement hook_form_validate().
 * @param $form
 * @param $form_state
 * @return bool
 */
function ds_form_subscription_form_validate($form, &$form_state) {
  $new_email = $form_state['values']['email'];
  if (!(db_table_exists('ds_form_news_subscriptions'))) {
    //create table or show message
    drupal_set_message(t('DB error occurred.'), 'error');

  }
  else {
    $row_exists = db_select('ds_form_news_subscriptions', 'u')
      ->fields('u', array('first_name'))
      ->condition('u.email', $new_email)
      ->execute()
      ->fetchField();
    if ($row_exists) {
      form_set_error('email', t('User with this e-mail has already subscribed.'));
    }
    return TRUE;
  }
}

/**
 * Implements hook_permission().
 */
function ds_form_permission() {
  return array(
    'access form content' => array(
      'title' => t('Access content for the Form module'),
    )
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function ds_form_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return 'plugins/' . $plugin;
  }
}


