<?php
module_load_include('inc', 'pets_owners_storage', 'includes/validation_rules/custom_fapi_validation_rules');
module_load_include('inc', 'pets_owners_storage', 'includes/db/db');
module_load_include('inc', 'pets_owners_storage', 'includes/pets_owners_storage.forms');
module_load_include('inc', 'pets_owners_storage', 'includes/pets_owners_storage.views');
/**
 * Implement hook_menu().
 */
function pets_owners_storage_menu() {
  $items = array();

  $items['pets_owners_storage/pets_owners_form'] = array(
    'title' => 'Pets owners form',
    'description' => 'A new pet owners form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pets_owners_storage_form'),
    'access arguments' => array('access pets owners form'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['pets_owners_storage/pets_owners_page'] = array(
    'title' => 'Pets owners table',
    'description' => 'All pets owners in DB',
    'page callback' => 'pets_owners_storage_admin_page',
    'access arguments' => array('access all pets owners table'),
    'file' => 'includes/pets_owners_storage.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );

  $items['pets_owners_storage/delete_owner/%'] = array(
    'page callback' => 'pets_owners_storage_delete_callback',
    'page arguments' => array(2),
    'access arguments' => array('access all pets owners table'),
    'file' => 'includes/pets_owners_storage.pages.inc',
  );

  $items['pets_owners_storage/confirm_delete/%'] = array(
    'page callback' => 'pets_owners_storage_confirm_callback',
    'page arguments' => array(2),
    'access arguments' => array('access all pets owners table'),
    'file' => 'includes/pets_owners_storage.pages.inc',
  );

  $items['pets_owners_storage'] = array(
    'title' => 'Colored menu for pets owners storage module',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'pets_owners_storage_colored_menu_callback',
    'access callback' => TRUE,
    'file' => 'includes/pets_owners_storage.pages.inc',
  );

  $items['pets_owners_storage/info'] = array(
    'title' => 'Colored Menu Info',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['pets_owners_storage_colors'] = array(
    'page callback' => 'pets_owners_storage_colors_callback',
    'delivery callback' => 'ajax_deliver',
    'access callback' => TRUE,
    'file' => 'includes/pets_owners_storage.pages.inc',
  );

//  $items['pets_owners_storage/entity'] = array(
//    'title' => 'Pet owners Entities',
//    'description' => 'Shows Pet owners Entities',
//    'page callback' => 'pets_owners_storage_entity_page',
//    'access arguments' => array('access all pets owners table'),
//    'file' => 'includes/pets_owners_storage.pages.inc',
//    'type' => MENU_LOCAL_TASK,
//  );

  return $items;
}


/**
 * Implements hook_permission().
 */
function pets_owners_storage_permission() {
  return array(
    'access pets owners form' => array(
      'title' => t('Access form for adding new pets owner in pets_owners_storage module.'),
    ),
    'access all pets owners table' => array(
      'title' => t('Access table of all pets owners in pets_owners_storage module.'),
    ),
  );
}

/**
 * Implements hook_views_api()
 */
function pets_owners_storage_views_api() {
  return array('api' => 3);
}

/**
 * Implements hook_flush_caches().
 */
function pets_owners_storage_flush_caches() {
  // Возвращаем имя собственного сегмента для очистки данных кэша в нём.
  return array('cache_pets_owners_storage');
}

/*
* Implements hook_cron_queue_info().
*/
function pets_owners_storage_cron_queue_info() {
  $queues['pets_owners_storage_edit'] = array(
    'worker callback' => 'edit_pet_owner',
    'time' => 60,
  );
  $queues['pets_owners_storage_add'] = array(
    'worker callback' => 'add_pet_owner',
    'time' => 60,
  );
  return $queues;
}

/**
 * Implements hook_entity_info().
 */
//function pets_owners_storage_entity_info() {
//
//  $info = array();
//
//  $info['pet_owner'] = array(
//    'label' => t('Pet Owner'),
//    'base table' => 'pets_owners_storage',
//    'entity keys' => array(
//      'id' => 'id',
//      'label' => 'first_name',
//    ),
//    'translation' => TRUE,
//    'module' => 'pets_owners_storage',
//    'entity class' => 'Entity',
////    'controller class' => 'PetOwnerEntityController',
//    'controller class' => 'EntityAPIControllerExportable',
//    'exportable' => TRUE,
//  );
//
//  return $info;
//}

/**
 * Extending the EntityAPIController for the pet_owner entity.
 */
//class PetOwnerEntityController extends EntityAPIController {
//  public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {
//
//    $build = parent::buildContent($entity, $view_mode, $langcode, $content);
//
//// Our additions to the $build render array
//    $build['first_name'] = array(
//      '#type' => 'markup',
//      '#markup' => check_plain($entity->first_name),
//      '#prefix' => '<div class="pet_owner-name">',
//      '#suffix' => '</div>',
//    );
//    $build['birthday_timestamp'] = array(
//      '#type' => 'markup',
//      '#markup' => date('d F, Y', check_plain($entity->birthday_timestamp)),
//      '#prefix' => '<p>Birthday: ',
//      '#suffix' => '</p>',
//    );
//    return $build;
//
//  }
//}
